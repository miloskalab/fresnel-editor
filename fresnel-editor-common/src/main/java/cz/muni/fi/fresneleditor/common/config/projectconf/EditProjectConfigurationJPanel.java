/*
 * Fresnel Editor
 */

package cz.muni.fi.fresneleditor.common.config.projectconf;

import javax.swing.JScrollPane;

import cz.muni.fi.fresneleditor.common.AppEventsManager;
import cz.muni.fi.fresneleditor.common.FresnelApplication;
import cz.muni.fi.fresneleditor.common.ITabComponent;
import cz.muni.fi.fresneleditor.common.config.ProjectConfiguration;

/**
 * Class implementing a component for editing existing repository configuration.
 * 
 * @author Igor Zemsky (zemsky@mail.muni.cz)
 */
public class EditProjectConfigurationJPanel extends javax.swing.JPanel
		implements ITabComponent<ProjectConfiguration> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public static final Object EDIT_PROJECT_CONF_PANEL_TAB_ID = "_edit_project_conf_panel_tab_id_";

	private final ProjectConfiguration configuration;

	private final String projectConfigurationFileURL;

	/**
	 * Creates new form EditProjectConfigurationJPanel
	 */
	public EditProjectConfigurationJPanel() {
		this(null, null);
	}

	/**
	 * @param projectConfiguration
	 */
	public EditProjectConfigurationJPanel(
			ProjectConfiguration projectConfiguration,
			String projectConfigurationFileURL) {

		this.configuration = projectConfiguration;
		this.projectConfigurationFileURL = projectConfigurationFileURL;
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		projectConfigurationJPanel = new cz.muni.fi.fresneleditor.common.config.projectconf.ProjectConfigurationJPanel(
				configuration, projectConfigurationFileURL);
		saveButton = new javax.swing.JButton();
		closeButton = new javax.swing.JButton();

		projectConfigurationJPanel.setName("projectConfigurationJPanel"); // NOI18N

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(
						cz.muni.fi.fresneleditor.common.FresnelApplication.class)
				.getContext()
				.getResourceMap(EditProjectConfigurationJPanel.class);
		saveButton.setText(resourceMap.getString("saveButton.text")); // NOI18N
		saveButton.setName("saveButton"); // NOI18N
		saveButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				saveButtonActionPerformed(evt);
			}
		});

		closeButton.setText(resourceMap.getString("closeButton.text")); // NOI18N
		closeButton.setName("closeButton"); // NOI18N
		closeButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				closeButtonActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														javax.swing.GroupLayout.Alignment.TRAILING,
														layout.createSequentialGroup()
																.addContainerGap()
																.addComponent(
																		closeButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		85,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		saveButton,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		81,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addComponent(
																		projectConfigurationJPanel,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap(12, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(6, 6, 6)
								.addComponent(projectConfigurationJPanel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(saveButton)
												.addComponent(closeButton))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_saveButtonActionPerformed
		boolean editingOpenedProject = projectConfigurationJPanel
				.isEditingOpenedProjectConfiguration();
		if (projectConfigurationJPanel.saveProjectConfiguration()) {
			if (editingOpenedProject) {
				FresnelApplication.getApp().getBaseFrame().closeAllOpenedTabs();
				// TODO fire here more granular events...
				AppEventsManager.getInstance().fireOpenProjectChanged(this);
			}
		}
	}// GEN-LAST:event_saveButtonActionPerformed

	private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_closeButtonActionPerformed
		FresnelApplication.getApp().getBaseFrame().closeTabByComponent(this);
	}// GEN-LAST:event_closeButtonActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton closeButton;
	private cz.muni.fi.fresneleditor.common.config.projectconf.ProjectConfigurationJPanel projectConfigurationJPanel;
	private javax.swing.JButton saveButton;
	// End of variables declaration//GEN-END:variables

	private JScrollPane scrollPane;

	@Override
	public ProjectConfiguration getItem() {
		return projectConfigurationJPanel.getConfiguration();
	}

	@Override
	public String getLabel() {
		ProjectConfiguration currentConfiguration = projectConfigurationJPanel
				.getConfiguration();
		return currentConfiguration != null ? currentConfiguration.getName()
				+ " configuration" : "New project configuration";
	}

	@Override
	public JScrollPane getScrollPane() {
		if (scrollPane == null) {
			scrollPane = new JScrollPane(this);
		}
		return scrollPane;
	}

	/**
	 * @return the projectConfigurationFileURL
	 */
	public String getProjectConfigurationFileURL() {
		return projectConfigurationFileURL;
	}

}

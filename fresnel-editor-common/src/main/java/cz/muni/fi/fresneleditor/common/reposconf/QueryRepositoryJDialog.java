/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * QueryRepositoryJDialog.java
 *
 * Created on 3.5.2010, 9:50:24
 */

package cz.muni.fi.fresneleditor.common.reposconf;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

import org.openrdf.query.QueryLanguage;

import cz.muni.fi.fresneleditor.common.data.SelectorObject;
import cz.muni.fi.fresneleditor.common.data.SelectorType;
import cz.muni.fi.fresneleditor.common.utils.GuiUtils;
import cz.muni.fi.fresneleditor.model.BaseRepositoryDao;
import cz.muni.fi.fresneleditor.model.SparqlUtils;
import cz.muni.fi.fresneleditor.model.TupleResult;

/**
 * 
 * @author nodrock
 */
public class QueryRepositoryJDialog extends javax.swing.JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	// private final static Logger LOG =
	// LoggerFactory.getLogger(EditRepositoryDialog.class);

	private final BaseRepositoryDao repositoryDao;

	private SelectorObject selectorObject = null;

	/** Creates new form QueryRepositoryJDialog */
	public QueryRepositoryJDialog(java.awt.Frame parent, boolean modal,
			BaseRepositoryDao repository, SelectorObject selectorObject) {
		this(parent, modal, repository);

		this.selectorObject = selectorObject;
		if (this.selectorObject != null) {
			switch (this.selectorObject.getSelectorType()) {
			case SIMPLE:
				txtSimpleQuery.setText(this.selectorObject.getQuery());
				queryTab.setSelectedComponent(simpleTab);
				break;
			case SPARQL:
				txtQuery.setText(this.selectorObject.getQuery());
				queryTab.setSelectedComponent(sparqlTab);
				break;
			case FSL:
				txtFSLQuery.setText(this.selectorObject.getQuery());
				queryTab.setSelectedComponent(fslTab);
				break;
			}

			btnInsert.setVisible(true);
			btnFSLInsert.setVisible(true);
			btnInsertSimple.setVisible(true);
		}
	}

	public QueryRepositoryJDialog(java.awt.Frame parent, boolean modal,
			BaseRepositoryDao repository) {
		super(parent, modal);
		initComponents();

		repositoryDao = repository;

		GuiUtils.centerOnScreen(this);

		setTitle("Query browser for " + repositoryDao.getName());

		txtPrefixes.setText(SparqlUtils
				.getSparqlQueryPrefixesHumanReadable(repositoryDao
						.getRepository()));
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		lblPrefixes = new javax.swing.JLabel();
		scrollPanePrefixes = new javax.swing.JScrollPane();
		txtPrefixes = new javax.swing.JTextArea();
		queryTab = new javax.swing.JTabbedPane();
		simpleTab = new javax.swing.JPanel();
		lblQuerySimple = new javax.swing.JLabel();
		txtSimpleQuery = new javax.swing.JTextField();
		btnExecuteSimple = new javax.swing.JButton();
		btnCloseSimple = new javax.swing.JButton();
		btnInsertSimple = new javax.swing.JButton();
		lblResultSimple = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		listResultSimple = new javax.swing.JList();
		sparqlTab = new javax.swing.JPanel();
		lblQuery = new javax.swing.JLabel();
		scrollPaneQuery = new javax.swing.JScrollPane();
		txtQuery = new javax.swing.JTextArea();
		scrollPaneResult = new javax.swing.JScrollPane();
		tableResult = new javax.swing.JTable();
		lblResult = new javax.swing.JLabel();
		btnExecute = new javax.swing.JButton();
		btnInsert = new javax.swing.JButton();
		btnClose = new javax.swing.JButton();
		fslTab = new javax.swing.JPanel();
		lblQuertFSL = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		txtFSLQuery = new javax.swing.JTextArea();
		btnFSLExecute = new javax.swing.JButton();
		jScrollPane3 = new javax.swing.JScrollPane();
		txtFSLResult = new javax.swing.JTextArea();
		lblResultFSL = new javax.swing.JLabel();
		btnFSLClose = new javax.swing.JButton();
		btnFSLInsert = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

		lblPrefixes.setText("Prefixes:");
		lblPrefixes.setName("lblPrefixes"); // NOI18N

		scrollPanePrefixes.setName("scrollPanePrefixes"); // NOI18N

		txtPrefixes.setColumns(20);
		txtPrefixes.setFont(new java.awt.Font("Monospaced", 0, 12));
		txtPrefixes.setRows(5);
		txtPrefixes.setName("txtPrefixes"); // NOI18N
		scrollPanePrefixes.setViewportView(txtPrefixes);

		queryTab.setName("queryTab"); // NOI18N

		simpleTab.setName("simpleTab"); // NOI18N

		lblQuerySimple.setText("Class name:");
		lblQuerySimple.setName("lblQuerySimple"); // NOI18N

		txtSimpleQuery.setName("txtSimpleQuery"); // NOI18N

		btnExecuteSimple.setText("Execute");
		btnExecuteSimple.setName("btnExecuteSimple"); // NOI18N
		btnExecuteSimple.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnExecuteSimpleActionPerformed(evt);
			}
		});

		btnCloseSimple.setText("Close");
		btnCloseSimple.setName("btnCloseSimple"); // NOI18N
		btnCloseSimple.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCloseSimpleActionPerformed(evt);
			}
		});

		btnInsertSimple.setText("Insert");
		btnInsertSimple.setName("btnInsertSimple"); // NOI18N
		btnInsertSimple.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnInsertSimpleActionPerformed(evt);
			}
		});

		lblResultSimple.setText("Result:");
		lblResultSimple.setName("lblResultSimple"); // NOI18N

		jScrollPane1.setName("jScrollPane1"); // NOI18N

		listResultSimple.setName("listResultSimple"); // NOI18N
		jScrollPane1.setViewportView(listResultSimple);

		javax.swing.GroupLayout simpleTabLayout = new javax.swing.GroupLayout(
				simpleTab);
		simpleTab.setLayout(simpleTabLayout);
		simpleTabLayout
				.setHorizontalGroup(simpleTabLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								simpleTabLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												simpleTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jScrollPane1,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																590,
																Short.MAX_VALUE)
														.addGroup(
																simpleTabLayout
																		.createSequentialGroup()
																		.addComponent(
																				lblQuerySimple)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				txtSimpleQuery,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				528,
																				Short.MAX_VALUE))
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																simpleTabLayout
																		.createSequentialGroup()
																		.addComponent(
																				btnInsertSimple)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnCloseSimple)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnExecuteSimple))
														.addComponent(
																lblResultSimple))
										.addContainerGap()));

		simpleTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { btnCloseSimple, btnExecuteSimple,
						btnInsertSimple });

		simpleTabLayout
				.setVerticalGroup(simpleTabLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								simpleTabLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												simpleTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																lblQuerySimple)
														.addComponent(
																txtSimpleQuery,
																javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												simpleTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																btnExecuteSimple)
														.addComponent(
																btnCloseSimple)
														.addComponent(
																btnInsertSimple))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(lblResultSimple)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane1,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												282, Short.MAX_VALUE)
										.addContainerGap()));

		btnInsertSimple.setVisible(false);

		queryTab.addTab("Simple selector", simpleTab);

		sparqlTab.setName("sparqlTab"); // NOI18N

		lblQuery.setText("Query:");
		lblQuery.setName("lblQuery"); // NOI18N

		scrollPaneQuery.setName("scrollPaneQuery"); // NOI18N

		txtQuery.setColumns(20);
		txtQuery.setFont(new java.awt.Font("Monospaced", 0, 12));
		txtQuery.setRows(5);
		txtQuery.setName("txtQuery"); // NOI18N
		scrollPaneQuery.setViewportView(txtQuery);

		scrollPaneResult.setName("scrollPaneResult"); // NOI18N

		tableResult.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] {

				}, new String[] {

				}));
		tableResult.setName("tableResult"); // NOI18N
		scrollPaneResult.setViewportView(tableResult);

		lblResult.setText("Result:");
		lblResult.setName("lblResult"); // NOI18N

		btnExecute.setText("Execute");
		btnExecute.setName("btnExecute"); // NOI18N
		btnExecute.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnExecuteActionPerformed(evt);
			}
		});

		btnInsert.setText("Insert");
		btnInsert.setName("btnInsert"); // NOI18N
		btnInsert.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnInsertActionPerformed(evt);
			}
		});

		btnClose.setText("Close");
		btnClose.setName("btnClose"); // NOI18N
		btnClose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCloseActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout sparqlTabLayout = new javax.swing.GroupLayout(
				sparqlTab);
		sparqlTab.setLayout(sparqlTabLayout);
		sparqlTabLayout
				.setHorizontalGroup(sparqlTabLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								sparqlTabLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												sparqlTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																scrollPaneQuery,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																590,
																Short.MAX_VALUE)
														.addComponent(lblQuery)
														.addGroup(
																javax.swing.GroupLayout.Alignment.TRAILING,
																sparqlTabLayout
																		.createSequentialGroup()
																		.addComponent(
																				btnInsert)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnClose)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnExecute))
														.addComponent(
																scrollPaneResult,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																590,
																Short.MAX_VALUE)
														.addComponent(lblResult))
										.addContainerGap()));

		sparqlTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { btnClose, btnExecute, btnInsert });

		sparqlTabLayout
				.setVerticalGroup(sparqlTabLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								sparqlTabLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(lblQuery)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												scrollPaneQuery,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												75,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												sparqlTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																btnExecute)
														.addComponent(btnClose)
														.addComponent(btnInsert))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(lblResult)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												scrollPaneResult,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												207,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addContainerGap(
												javax.swing.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));

		btnInsert.setVisible(false);

		queryTab.addTab("SPARQL", sparqlTab);

		fslTab.setName("fslTab"); // NOI18N

		lblQuertFSL.setText("Query:");
		lblQuertFSL.setName("lblQuertFSL"); // NOI18N

		jScrollPane2.setName("jScrollPane2"); // NOI18N

		txtFSLQuery.setColumns(20);
		txtFSLQuery.setFont(new java.awt.Font("Monospaced", 0, 12));
		txtFSLQuery.setRows(5);
		txtFSLQuery.setName("txtFSLQuery"); // NOI18N
		jScrollPane2.setViewportView(txtFSLQuery);

		btnFSLExecute.setText("Execute");
		btnFSLExecute.setName("btnFSLExecute"); // NOI18N
		btnFSLExecute.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFSLExecuteActionPerformed(evt);
			}
		});

		jScrollPane3.setName("jScrollPane3"); // NOI18N

		txtFSLResult.setColumns(20);
		txtFSLResult.setFont(new java.awt.Font("Monospaced", 0, 12));
		txtFSLResult.setRows(5);
		txtFSLResult.setName("txtFSLResult"); // NOI18N
		jScrollPane3.setViewportView(txtFSLResult);

		lblResultFSL.setText("Result:");
		lblResultFSL.setName("lblResultFSL"); // NOI18N

		btnFSLClose.setText("Close");
		btnFSLClose.setName("btnFSLClose"); // NOI18N
		btnFSLClose.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFSLCloseActionPerformed(evt);
			}
		});

		btnFSLInsert.setText("Insert");
		btnFSLInsert.setName("btnFSLInsert"); // NOI18N
		btnFSLInsert.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnFSLInsertActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout fslTabLayout = new javax.swing.GroupLayout(
				fslTab);
		fslTab.setLayout(fslTabLayout);
		fslTabLayout
				.setHorizontalGroup(fslTabLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								javax.swing.GroupLayout.Alignment.TRAILING,
								fslTabLayout
										.createSequentialGroup()
										.addContainerGap()
										.addGroup(
												fslTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(
																jScrollPane3,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																590,
																Short.MAX_VALUE)
														.addGroup(
																fslTabLayout
																		.createSequentialGroup()
																		.addGap(365,
																				365,
																				365)
																		.addComponent(
																				btnFSLInsert)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnFSLClose)
																		.addPreferredGap(
																				javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(
																				btnFSLExecute))
														.addComponent(
																lblQuertFSL,
																javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(
																jScrollPane2,
																javax.swing.GroupLayout.Alignment.LEADING,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																590,
																Short.MAX_VALUE)
														.addComponent(
																lblResultFSL,
																javax.swing.GroupLayout.Alignment.LEADING))
										.addContainerGap()));

		fslTabLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL,
				new java.awt.Component[] { btnFSLClose, btnFSLExecute,
						btnFSLInsert });

		fslTabLayout
				.setVerticalGroup(fslTabLayout
						.createParallelGroup(
								javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(
								fslTabLayout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(lblQuertFSL)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane2,
												javax.swing.GroupLayout.PREFERRED_SIZE,
												74,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addGroup(
												fslTabLayout
														.createParallelGroup(
																javax.swing.GroupLayout.Alignment.BASELINE)
														.addComponent(
																btnFSLExecute)
														.addComponent(
																btnFSLClose)
														.addComponent(
																btnFSLInsert))
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(lblResultFSL)
										.addPreferredGap(
												javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(
												jScrollPane3,
												javax.swing.GroupLayout.DEFAULT_SIZE,
												208, Short.MAX_VALUE)
										.addContainerGap()));

		btnFSLInsert.setVisible(false);

		queryTab.addTab("FSL", fslTab);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(
														scrollPanePrefixes,
														javax.swing.GroupLayout.Alignment.TRAILING,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														615, Short.MAX_VALUE)
												.addComponent(
														queryTab,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														615, Short.MAX_VALUE)
												.addComponent(lblPrefixes))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addComponent(lblPrefixes)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(scrollPanePrefixes,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										126,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)
								.addComponent(queryTab,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										407,
										javax.swing.GroupLayout.PREFERRED_SIZE)));

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnExecuteActionPerformed
		String prefixes = txtPrefixes.getText();
		prefixes = prefixes.replace('\n', ' ');
		String query = txtQuery.getText();
		query = query.replace('\n', ' ');
		if (query.toLowerCase().indexOf("select") != -1) {
			TupleResult result = repositoryDao.executeTupleQuery(
					QueryLanguage.SPARQL, prefixes + query);

			if (result == null) {
				tableResult.setModel(new DefaultTableModel());
				return;
			}

			List<String> bindingNames = result.getBindingNames();

			TableModel tableModel = new DefaultTableModel(
					result.getStringValues(),
					bindingNames.toArray(new String[0]));

			tableResult.setModel(tableModel);
		}

	}// GEN-LAST:event_btnExecuteActionPerformed

	private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInsertActionPerformed
		if (this.selectorObject != null) {
			this.selectorObject.setSelectorType(SelectorType.SPARQL);
			this.selectorObject.setQuery(txtQuery.getText());
			this.selectorObject.setUpdated(true);
		}
		dispose();
	}// GEN-LAST:event_btnInsertActionPerformed

	private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCloseActionPerformed
		dispose();
	}// GEN-LAST:event_btnCloseActionPerformed

	private void btnFSLExecuteActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFSLExecuteActionPerformed
		Vector pathInstances = repositoryDao.evalFSLPath(txtFSLQuery.getText());

		StringBuilder sb = new StringBuilder();

		for (Object pathInstance : pathInstances) {
			sb.append(pathInstance.toString()).append('\n');
		}

		txtFSLResult.setText(sb.toString());

	}// GEN-LAST:event_btnFSLExecuteActionPerformed

	private void btnFSLCloseActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFSLCloseActionPerformed
		dispose();
	}// GEN-LAST:event_btnFSLCloseActionPerformed

	private void btnFSLInsertActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnFSLInsertActionPerformed
		if (this.selectorObject != null) {
			this.selectorObject.setSelectorType(SelectorType.FSL);
			this.selectorObject.setQuery(txtFSLQuery.getText());
			this.selectorObject.setUpdated(true);
		}
		dispose();
	}// GEN-LAST:event_btnFSLInsertActionPerformed

	private void btnExecuteSimpleActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO: CHECK INPUT MAYBE DO THIS IN ANOTHER WAY SPARQL OR SOMETHING
		Vector pathInstances = repositoryDao.evalFSLPath(txtSimpleQuery
				.getText());

		List<String> classes = new ArrayList<String>();
		for (Object pathInstance : pathInstances) {
			classes.add(pathInstance.toString());
		}

		listResultSimple.setModel(new DefaultComboBoxModel(classes.toArray()));
	}

	private void btnCloseSimpleActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnCloseSimpleActionPerformed
		dispose();
	}// GEN-LAST:event_btnCloseSimpleActionPerformed

	private void btnInsertSimpleActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnInsertSimpleActionPerformed
		if (this.selectorObject != null) {
			this.selectorObject.setSelectorType(SelectorType.SIMPLE);
			this.selectorObject.setQuery(txtSimpleQuery.getText());
			this.selectorObject.setUpdated(true);
		}
		dispose();
	}// GEN-LAST:event_btnInsertSimpleActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton btnClose;
	private javax.swing.JButton btnCloseSimple;
	private javax.swing.JButton btnExecute;
	private javax.swing.JButton btnExecuteSimple;
	private javax.swing.JButton btnFSLClose;
	private javax.swing.JButton btnFSLExecute;
	private javax.swing.JButton btnFSLInsert;
	private javax.swing.JButton btnInsert;
	private javax.swing.JButton btnInsertSimple;
	private javax.swing.JPanel fslTab;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JLabel lblPrefixes;
	private javax.swing.JLabel lblQuertFSL;
	private javax.swing.JLabel lblQuery;
	private javax.swing.JLabel lblQuerySimple;
	private javax.swing.JLabel lblResult;
	private javax.swing.JLabel lblResultFSL;
	private javax.swing.JLabel lblResultSimple;
	private javax.swing.JList listResultSimple;
	private javax.swing.JTabbedPane queryTab;
	private javax.swing.JScrollPane scrollPanePrefixes;
	private javax.swing.JScrollPane scrollPaneQuery;
	private javax.swing.JScrollPane scrollPaneResult;
	private javax.swing.JPanel simpleTab;
	private javax.swing.JPanel sparqlTab;
	private javax.swing.JTable tableResult;
	private javax.swing.JTextArea txtFSLQuery;
	private javax.swing.JTextArea txtFSLResult;
	private javax.swing.JTextArea txtPrefixes;
	private javax.swing.JTextArea txtQuery;
	private javax.swing.JTextField txtSimpleQuery;
	// End of variables declaration//GEN-END:variables

}

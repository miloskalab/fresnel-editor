/*
 * Fresnel Editor
 */

package cz.muni.fi.fresneleditor.common.guisupport.panels;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.swing.JTable;
import javax.swing.SwingUtilities;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import cz.muni.fi.fresneleditor.common.data.StyleGuiWrapper;
import cz.muni.fi.fresneleditor.common.data.StyleType;
import cz.muni.fi.fresneleditor.common.guisupport.MessageDialog;
import cz.muni.fi.fresneleditor.common.guisupport.dialogs.StyleDialog;
import cz.muni.fi.fresneleditor.common.guisupport.model.StylesTableModel;
import cz.muni.fi.fresneleditor.common.utils.GuiUtils;

/**
 * 
 * @author Miroslav Warchil (warmir@mail.muni.cz)
 * @version 2.5.2009
 */
public class StylesJPanel extends javax.swing.JPanel {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private static final Logger LOG = LoggerFactory
			.getLogger(StylesJPanel.class);

	private static int NO_ROW_SELECTED = -1;

	/**
	 * Creates new instance of StylesJPanel.
	 */
	public StylesJPanel() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents() {

		stylesTableScrollPane = new javax.swing.JScrollPane();
		stylesTable = new javax.swing.JTable();
		usedStylesLabel = new javax.swing.JLabel();
		addNewStyleBtn = new javax.swing.JButton();
		editStyleBtn = new javax.swing.JButton();
		deleteStyleBtn = new javax.swing.JButton();

		org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application
				.getInstance(
						cz.muni.fi.fresneleditor.common.FresnelApplication.class)
				.getContext().getResourceMap(StylesJPanel.class);
		setBorder(javax.swing.BorderFactory.createTitledBorder(resourceMap
				.getString("Form.border.title"))); // NOI18N
		setName("Form"); // NOI18N

		stylesTableScrollPane.setName("stylesTableScrollPane"); // NOI18N

		stylesTable.setModel(new StylesTableModel());
		stylesTable.setName("stylesTable"); // NOI18N
		stylesTable
				.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		stylesTable.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				stylesTableMouseClicked(evt);
			}
		});
		stylesTableScrollPane.setViewportView(stylesTable);

		usedStylesLabel.setText(resourceMap.getString("usedStylesLabel.text")); // NOI18N
		usedStylesLabel.setName("usedStylesLabel"); // NOI18N

		addNewStyleBtn.setText(resourceMap.getString("addNewStyleBtn.text")); // NOI18N
		addNewStyleBtn.setName("addNewStyleBtn"); // NOI18N
		addNewStyleBtn.setPreferredSize(new java.awt.Dimension(107, 23));
		addNewStyleBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				addNewStyleBtnActionPerformed(evt);
			}
		});

		editStyleBtn.setText(resourceMap.getString("editStyleBtn.text")); // NOI18N
		editStyleBtn.setMaximumSize(new java.awt.Dimension(107, 23));
		editStyleBtn.setMinimumSize(new java.awt.Dimension(107, 23));
		editStyleBtn.setName("editStyleBtn"); // NOI18N
		editStyleBtn.setPreferredSize(new java.awt.Dimension(107, 23));
		editStyleBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				editStyleBtnActionPerformed(evt);
			}
		});

		deleteStyleBtn.setText(resourceMap.getString("deleteStyleBtn.text")); // NOI18N
		deleteStyleBtn.setName("deleteStyleBtn"); // NOI18N
		deleteStyleBtn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				deleteStyleBtnActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 617, Short.MAX_VALUE)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		stylesTableScrollPane,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		484,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						deleteStyleBtn,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						editStyleBtn,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						addNewStyleBtn,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)))
												.addComponent(usedStylesLabel))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addComponent(usedStylesLabel,
										javax.swing.GroupLayout.PREFERRED_SIZE,
										14,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(
										javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(
																		addNewStyleBtn,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		editStyleBtn,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		javax.swing.GroupLayout.DEFAULT_SIZE,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(
																		deleteStyleBtn))
												.addComponent(
														stylesTableScrollPane,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														108, Short.MAX_VALUE))
								.addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents

	private void stylesTableMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_stylesTableMouseClicked
		if (evt.getClickCount() == 2) {
			handleEditStyleAction();
		}
	}// GEN-LAST:event_stylesTableMouseClicked

	private void addNewStyleBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_addNewStyleBtnActionPerformed
		// Get table model
		final StylesTableModel tableModel = (StylesTableModel) stylesTable
				.getModel();
		// Find out which style types are not used
		List<StyleType> styleTypes = getMissingStyleTypes(tableModel.getAll());
		if (styleTypes.isEmpty()) {
			new MessageDialog(GuiUtils.getOwnerFrame(this),
					"Cannot add further style",
					"All style types are already defined!").setVisible(true);
			LOG.info("All style types are already defined - cannot add further style!");
			return;
		}
		LOG.info("Not defined style types: " + styleTypes);
		// Create new style and pass it to Style Dialog
		final StyleGuiWrapper style = new StyleGuiWrapper(styleTypes.get(0));
		style.setUpdated(false);
		LOG.info("Creating new style: " + style.toString());
		final StyleDialog styleDialog = new StyleDialog(
				GuiUtils.getOwnerFrame(this), true, style, styleTypes);
		styleDialog.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosed(WindowEvent ev) {
				// Take styles returned from styles dialog and add it to table
				// model
				LOG.info("Merging changes of style: " + style.toString());
				SwingUtilities.invokeLater(new Runnable() {
					@Override
					public void run() {
						// FIXME: Handle cancel action
						if (style.isUpdated()) {
							tableModel.addRow(style);
						}
					}
				});
			}
		});
		// Display Style Dialog
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				GuiUtils.centerOnScreen(styleDialog);
				styleDialog.setVisible(true);
			}
		});
	}// GEN-LAST:event_addNewStyleBtnActionPerformed

	private void editStyleBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_editStyleBtnActionPerformed
		handleEditStyleAction();
	}// GEN-LAST:event_editStyleBtnActionPerformed

	private void deleteStyleBtnActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deleteStyleBtnActionPerformed

		final int selectedRowIndex = stylesTable.getSelectedRow();

		if (selectedRowIndex == NO_ROW_SELECTED) {
			return;
		}

		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				LOG.info("Deleting selected style.");
				StylesTableModel tableModel = (StylesTableModel) stylesTable
						.getModel();
				tableModel.deleteRow(selectedRowIndex);
			}
		});
	}// GEN-LAST:event_deleteStyleBtnActionPerformed

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton addNewStyleBtn;
	private javax.swing.JButton deleteStyleBtn;
	private javax.swing.JButton editStyleBtn;
	private javax.swing.JTable stylesTable;
	private javax.swing.JScrollPane stylesTableScrollPane;
	private javax.swing.JLabel usedStylesLabel;

	// End of variables declaration//GEN-END:variables

	private void handleEditStyleAction() {
		// Get selected style from table model
		final StylesTableModel tableModel = (StylesTableModel) stylesTable
				.getModel();
		final int selectedRowIndex = stylesTable.getSelectedRow();

		if (selectedRowIndex == NO_ROW_SELECTED) {
			return;
		}

		final StyleGuiWrapper style = tableModel.getRow(stylesTable
				.getSelectedRow());
		// Pass style to Style Dialog
		LOG.info("Editing style: " + style.toString());
		final StyleDialog styleDialog = new StyleDialog(
				GuiUtils.getOwnerFrame(this), true, style,
				new ArrayList<StyleType>());
		styleDialog.addWindowListener(new WindowAdapter() {
			@Override
			public void windowClosed(WindowEvent ev) {
				// Take updated style from Style Dialog and update table model
				LOG.info("Merging changes of style: " + style.toString());
				SwingUtilities.invokeLater(new Runnable() {
					@Override
					public void run() {
						tableModel.updateRow(selectedRowIndex, style);
					}
				});
			}
		});
		// Display Style Dialog
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				GuiUtils.centerOnScreen(styleDialog);
				styleDialog.setVisible(true);
			}
		});
	}

	/**
	 * Finds out which style types are not used within list of StyleGuiWrappers
	 * 
	 * @param styles
	 *            StyleGuiWrappers to be investigated
	 * @return list of style types which are not used
	 */
	public static List<StyleType> getMissingStyleTypes(
			List<StyleGuiWrapper> styles) {

		List<StyleType> resultStyles = new ArrayList<StyleType>();
		resultStyles.addAll(Arrays.asList(StyleType.values()));

		// Remove all style types which are already used
		for (StyleGuiWrapper styleGuiWrapper : styles) {
			resultStyles.remove(styleGuiWrapper.getType());
		}

		// Return only these style types which are not used
		return resultStyles;
	}

	// --------------------------------------
	// Getters for accessing panel components
	// --------------------------------------

	public JTable getStylesTable() {
		return stylesTable;
	}
}
